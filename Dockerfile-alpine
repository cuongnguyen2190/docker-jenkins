FROM openjdk:8-jdk-alpine

RUN apk add --no-cache git git-lfs openssh-client curl unzip bash ttf-dejavu coreutils tini

ARG USER
ARG GROUP
ARG UID
ARG GID
ARG HTTP_PORT
ARG AGENT_PORT
ARG JENKINS_HOME
ARG REF
ARG JENKINS_VERSION
ARG JENKINS_SHA

ENV USER=${USER:-cuong}
ENV GROUP=${GROUP:-cuong}
ENV UID=${UID:-1000}
ENV GID=${GID:-1000}
ENV HTTP_PORT=${HTTP_PORT:-8080}
ENV AGENT_PORT=${AGENT_PORT:-50000}
ENV JENKINS_HOME=${JENKINS_HOME:-/var/jenkins_home}
ENV JENKINS_SLAVE_AGENT_PORT=${AGENT_PORT:-50000}
ENV REF=${REF:-/usr/share/jenkins/ref}
ENV JENKINS_VERSION=${JENKINS_VERSION:-2.249.3}
ENV JENKINS_SHA=${JENKINS_SHA:-8de8f11d5688c79967bc53a8124960926a90d623e5e9f03f1315ccf3e7c49702}

# Jenkins is run with user `jenkins`, uid = 1000
# If you bind mount a volume from the host or a data container,
# ensure you use the same uid
RUN mkdir -p $JENKINS_HOME \
  && chown ${UID}:${GID} $JENKINS_HOME \
  && addgroup -g ${GID} ${GROUP} \
  && adduser -h "${JENKINS_HOME}" -u ${UID} -G ${GROUP} -s /bin/bash -D ${USER}

RUN addgroup -S docker && \
    addgroup ${USER} docker

# Jenkins home directory is a volume, so configuration and build history
# can be persisted and survive image upgrades
VOLUME $JENKINS_HOME

# $REF (defaults to `/usr/share/jenkins/ref/`) contains all reference configuration we want
# to set on a fresh new installation. Use it to bundle additional plugins
# or config file with your custom jenkins Docker image.
RUN mkdir -p ${REF}/init.groovy.d

# Can be used to customize where jenkins.war get downloaded from
ARG JENKINS_URL=https://repo.jenkins-ci.org/public/org/jenkins-ci/main/jenkins-war/${JENKINS_VERSION}/jenkins-war-${JENKINS_VERSION}.war

# could use ADD but this one does not check Last-Modified header neither does it allow to control checksum
# see https://github.com/docker/docker/issues/8331
RUN curl -fsSL ${JENKINS_URL} -o /usr/share/jenkins/jenkins.war \
  && echo "${JENKINS_SHA}  /usr/share/jenkins/jenkins.war" | sha256sum -c -

ENV JENKINS_UC https://updates.jenkins.io
ENV JENKINS_UC_EXPERIMENTAL=https://updates.jenkins.io/experimental
ENV JENKINS_INCREMENTALS_REPO_MIRROR=https://repo.jenkins-ci.org/incrementals
RUN chown -R ${USER} "$JENKINS_HOME" "$REF"

# for main web interface:
EXPOSE ${HTTP_PORT}

# will be used by attached slave agents:
EXPOSE ${AGENT_PORT}

ENV COPY_REFERENCE_FILE_LOG $JENKINS_HOME/copy_reference_file.log

USER ${USER}

COPY jenkins-support /usr/local/bin/jenkins-support
COPY jenkins.sh /usr/local/bin/jenkins.sh
COPY tini-shim.sh /bin/tini
ENTRYPOINT ["/sbin/tini", "--", "/usr/local/bin/jenkins.sh"]

# from a derived Dockerfile, can use `RUN plugins.sh active.txt` to setup $REF/plugins from a support bundle
COPY plugins.sh /usr/local/bin/plugins.sh
COPY install-plugins.sh /usr/local/bin/install-plugins.sh
